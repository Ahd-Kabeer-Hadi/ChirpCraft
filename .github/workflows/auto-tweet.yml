# .github/workflows/auto-tweet.yml

name: ChirpCraft AI Twitter Bot

on:
  schedule:
    # Run the main job HOURLY - the script decides *if* it posts
    - cron: '0 * * * *'
    # Weekly reset job (Sunday ~midnight UTC)
    - cron: '5 0 * * 0'
  workflow_dispatch: # Allows manual triggering of ALL jobs

jobs:
  # --- Job to Maybe Post Content ---
  tweet:
    name: Check and Post Content
    # Run this job ONLY on the hourly schedule or manual dispatch
    if: github.event.schedule == '0 * * * *' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow writing state.json
    concurrency:
      group: ${{ github.workflow }}-tweet-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Run tweeting script
        # Runs node dist/index.js - this script now decides IF it posts
        run: node dist/index.js
        env:
          TW_APP_KEY: ${{ secrets.TW_APP_KEY }}
          TW_APP_SECRET: ${{ secrets.TW_APP_SECRET }}
          TW_ACCESS_TOKEN: ${{ secrets.TW_ACCESS_TOKEN }}
          TW_ACCESS_SECRET: ${{ secrets.TW_ACCESS_SECRET }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          BOT_HANDLE: ${{ secrets.BOT_HANDLE }}
          BOT_USER_ID: ${{ secrets.BOT_USER_ID }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Commit and push state changes
        run: |
          if [[ -f ./state.json ]] && ! git diff --quiet HEAD ./state.json; then
            echo "Changes detected in state.json. Committing..."
            git add ./state.json
            git commit -m "Update state.json [skip ci]" -m "Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            git push origin ${{ github.ref_name }}
          else
            echo "No changes detected in state.json or file does not exist."
          fi

  # --- Job to Reset State Weekly ---
  reset_state:
    name: Reset Weekly State
    # Run this job ONLY on the weekly schedule
    if: github.event.schedule == '5 0 * * 0'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Reset state.json
        run: echo "{}" > ./state.json

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Commit and push reset state
        run: |
          # Only commit if state.json is different from HEAD
          if [[ -f ./state.json ]] && ! git diff --quiet HEAD ./state.json; then
            echo "state.json changed. Committing reset..."
            git add ./state.json
            git commit -m "Reset state.json for the week [skip ci]" -m "Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            git push origin ${{ github.ref_name }}
          else
            echo "No changes to commit (state.json already up-to-date)."
          fi

name: Auto Tweet Using AI

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  tweet:
    runs-on: ubuntu-latest
    # Prevent multiple instances of this workflow from running concurrently for the same branch
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # Fetch full history needed for checking diffs and pushing later
        with:
          fetch-depth: 0 # Required to compare against origin/main or similar

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your required Node.js version
          cache: 'npm' # Enable caching based on package-lock.json

      - name: Install dependencies
        run: npm ci # Use ci for faster, reliable installs based on lock file

      - name: Build TypeScript
        run: npm run build # Assumes you have a "build" script in package.json

      - name: Run tweeting script
        # Run the script, passing secrets securely as environment variables
        run: node dist/indexed.js # Ensure this is the correct path to your compiled main file
        env:
          # These secrets MUST be configured in your GitHub repository settings
          # Settings > Secrets and variables > Actions > New repository secret
          TW_APP_KEY: ${{ secrets.TW_APP_KEY }}
          TW_APP_SECRET: ${{ secrets.TW_APP_SECRET }}
          TW_ACCESS_TOKEN: ${{ secrets.TW_ACCESS_TOKEN }}
          TW_ACCESS_SECRET: ${{ secrets.TW_ACCESS_SECRET }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          BOT_HANDLE: ${{ secrets.BOT_HANDLE }} # Also add as a secret

      - name: Configure Git
        # Configure git user for committing the state file
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Commit and push state changes
        # Check if state.json was modified, commit and push if it was
        run: |
          # Check if state.json exists and has changes compared to the checked-out version
          if [[ -f ./state.json ]] && ! git diff --quiet ./state.json; then
            echo "Changes detected in state.json. Committing..."
            git add ./state.json
            git commit -m "Update state.json [skip ci]" -m "Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            git push origin ${{ github.ref_name }} # Push to the same branch the workflow ran on
          else
            echo "No changes detected in state.json or file does not exist."
          fi
        # Consider adding error handling for the push if needed (e.g., retries)